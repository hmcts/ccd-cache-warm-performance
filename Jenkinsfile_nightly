#!groovy

properties([
        pipelineTriggers([cron('H 8-18/1 * * 1-5')]),
        parameters([
                choice(name: 'ENVIRONMENT', choices: 'perftest', description: 'Environment to warm CCD cache')
        ])
])

@Library("Infrastructure") _

def product = "ccd"
def component = "case-worker"

def secrets = [
        'ccd-perftest': [
                secret('ccd-api-gateway-oauth2-client-secret', 'CLIENT_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withNightlyPipeline("java", product, component) {

    loadVaultSecrets(secrets)

    afterAlways('checkout') {
        sh """ git submodule update --init --recursive"""
    }

    enablePerformanceTest()

    after('performanceTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

}
